<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>SF5Angular</groupId>
  <artifactId>SF5Angular</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>openboxsf5-angular</name>
  <description>Openbox SF-5 settings editor, web implementation with REST</description>
  
	<properties>
  		<spring.version>4.2.4.RELEASE</spring.version>
  		<spring.security.version>4.0.3.RELEASE</spring.security.version>
  		<hibernate.version>5.0.7.Final</hibernate.version> <!-- Comply with JavaEE 6 -->
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<jackson.version>2.5.4</jackson.version>
  		<jersey.version>2.22.1</jersey.version>
  		<resteasy.version>3.0.14.Final</resteasy.version>
  		<moxy.version>2.6.2</moxy.version>
	</properties>  
 
<build>
<resources>
	<resource>
    	<directory>src/main/java</directory> <!-- This excludes webapp resources from copying to classes! -->
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
	<resource>
    	<directory>src/main/resources</directory>
    	<filtering>true</filtering>
  	</resource>
  	<resource>
  		<directory>src/main/java</directory>
  		<excludes>
          <exclude>**/*.java</exclude>
        </excludes>
  	</resource>
</resources>
 
<defaultGoal>install</defaultGoal>
<testResources>
	<testResource>
    	<directory>${project.basedir}/src/test/java</directory>
  	</testResource>
  	<testResource>
    	<directory>${project.basedir}/src/test/resources</directory>
    	<filtering>true</filtering>
   	</testResource>
</testResources>

<plugins>
	<plugin>
    	<artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
        	<source>1.8</source>
          	<target>1.8</target>
        </configuration>
    </plugin>   

	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>2.18.1</version>
		<configuration>
			<includes>
				<include>**/*Tests.java</include>
			</includes>
			<excludes>
            	<exclude>**/*IT.java</exclude>
            </excludes>
		</configuration>
	</plugin>
	
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
          <encoding>UTF-8</encoding>
        </configuration>
        <executions>
        	<execution>
          	<!-- Serves *only* to filter the wro.xml so it can get an absolute
            	path for the project -->
          	<id>copy-resources</id>
          	<phase>validate</phase>
          	<goals>
            	<goal>copy-resources</goal>
          	</goals>
          	<configuration>
            	<outputDirectory>${basedir}/target/wro</outputDirectory>
            	<resources>
              	<resource>
                	<directory>src/main/wro</directory>
                	<filtering>true</filtering>
              </resource>
            </resources>
          	</configuration>
        	</execution>
		</executions>
        
     </plugin>
	
     <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
        	<warSourceDirectory>src/main/webapp</warSourceDirectory>
          	<failOnMissingWebXml>false</failOnMissingWebXml>
			<packagingExcludes>web.xml</packagingExcludes> <!-- In container test it says duplicate context, it still includes web.xml (( -->
        	<warName>${rp.build.warname}</warName>
		<webResources>
			<resource>
                <filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
                <directory>src/main/resources</directory>
                <targetPath>WEB-INF/classes/</targetPath>
                <includes>
                	<include>**/hibernate.cfg.xml</include> <!-- the path to hibernate.cfg.xml -->
                </includes>
            </resource>

            <resource>
            	<filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
            	<directory>src/main/resources/spring</directory>
             	<targetPath>WEB-INF</targetPath>
             	<includes>
					<include>*.xml</include>
                </includes>
            </resource>
            
            <resource>
            	<filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
            	<directory>src/main/resources/spring/${property.placeholder}/</directory>
             	<targetPath>WEB-INF/classes/</targetPath>
             	<includes>
					<include>application.properties</include>
                </includes>
            </resource>
            <resource>
            	<filtering>true</filtering>
                <directory>src/main/resources/web-inf-filter/</directory>
                <targetPath>WEB-INF/</targetPath>
                <includes>
		        	<include>**/jboss-web.xml</include>
        	    </includes>
            </resource> 
            
        </webResources>
        	
        </configuration>
	</plugin>
	
	
	
</plugins> 
</build>  

<profiles>
	<profile>
  	<id>test</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>  		   	 
	<properties>
  		<db.jdbcUrl>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</db.jdbcUrl>
  		<db.driver>org.h2.Driver</db.driver>
  		<db.user>sa</db.user>
  		<db.password></db.password>
        <db.dialect>H2Dialect</db.dialect>
        <db.hbm2ddl>update</db.hbm2ddl> 
  		<rp.build.warname>SF5Spring-test</rp.build.warname>
  		<property.placeholder>test</property.placeholder>
  	</properties>
  	
  	<!-- http://stackoverflow.com/questions/20916581/how-to-do-in-container-testing-of-a-web-app-in-spring -->
  	<build>
    	<plugins>
             <plugin>
             <groupId>org.codehaus.cargo</groupId>
             <artifactId>cargo-maven2-plugin</artifactId>
             <version>1.4.18</version>
             	<configuration>
                     <container>
						    <containerId>wildfly10x</containerId>
	                     	<zipUrlInstaller>
								<url>http://download.jboss.org/wildfly/10.0.0.Final/wildfly-10.0.0.Final.zip</url>
							</zipUrlInstaller>
						    <dependencies>
                				<dependency>
                    				<groupId>mysql</groupId>
                    				<artifactId>mysql-connector-java</artifactId>
                 				</dependency>
                 				<dependency>
                 					<groupId>com.h2database</groupId>
                 					<artifactId>h2</artifactId>
                 				</dependency>
            				</dependencies>
                     </container>
                     <configuration>
                     	<properties>
                             <cargo.servlet.port>8080</cargo.servlet.port>
                             <cargo.protocol>http</cargo.protocol>
                             <cargo.datasource.datasource.ds1>
                             		cargo.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1|
                             		cargo.datasource.driver=org.h2.Driver|
                             		cargo.datasource.username=sa|
                             		cargo.datasource.password=''|
                             		cargo.datasource.jndi=jboss/datasources/MySQLDS
                             </cargo.datasource.datasource.ds1>                  
                    	</properties>
                	</configuration>
                		<deployables>
                		<deployable>
                			<pingURL>http://localhost:8080/${rp.build.warname}/</pingURL>
	                		<pingTimeout>120000</pingTimeout> <!-- 2 min -->
                		 	<properties>
                		     	<context>${rp.build.warname}</context>
              				</properties>
                		</deployable>
                		</deployables>
                </configuration>

                
                
                <executions>
                     <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                        <goal>start</goal>
                    </goals>
                    </execution>
                    	<execution>
                    	<id>stop-container</id>
                    	<phase>post-integration-test</phase>
                    	<goals>
                    		<goal>stop</goal>
                    	</goals>
                	</execution>
            	</executions>
        	</plugin>
             	<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>	
					<version>2.18.1</version>
					<executions>
 				       	<execution>
            			<phase>integration-test</phase>
            			<goals>
               				<goal>test</goal>
            			</goals>
            			<configuration>
               				<excludes>
                  				<exclude>**/*Tests.java</exclude>
                  		    	<!-- Should exclude tests that fail in container but OK in IDE (( -->
                   				<exclude>**/jaxws/SettingsServiceIT.java</exclude>

                   				<exclude>**/json/endpoints/BUserServiceIT.java</exclude>
                   				<exclude>**/json/endpoints/SettingsServiceIT.java</exclude>          			
               				</excludes>
            				<includes>
								<include>**/*IT.java</include>
							</includes>
																			
            			</configuration>
        		</execution> 
      		</executions>
		</plugin>
		
		<plugin>
      		<groupId>ro.isdc.wro4j</groupId>
      		<artifactId>wro4j-maven-plugin</artifactId>
      		<version>1.7.6</version>
      		<executions>
        		<execution>
          		<phase>generate-resources</phase>
          		<goals>
            		<goal>run</goal>
          		</goals>
        		</execution>
      		</executions>
      		<configuration>
        		<wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
        		<cssDestinationFolder>${project.build.directory}/generated-resources/css</cssDestinationFolder>
        		<jsDestinationFolder>${project.build.directory}/generated-resources/js</jsDestinationFolder>
        		<wroFile>${project.build.directory}/wro/wro.xml</wroFile>
        		<extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
        		<contextFolder>${basedir}/src/main/wro</contextFolder>
      		</configuration>
      		<dependencies>
        		<dependency>
          			<groupId>org.webjars</groupId>
          			<artifactId>jquery</artifactId>
          			<version>2.1.4</version>
        		</dependency>
        		<dependency>
					<groupId>org.webjars</groupId>
					<artifactId>backbonejs</artifactId>
					<version>1.2.3</version>
				</dependency>
				<dependency>
					<groupId>org.webjars</groupId>
					<artifactId>lodash</artifactId>
					<version>3.10.1</version>
				</dependency>
				<dependency>
					<groupId>org.webjars</groupId>
					<artifactId>cujojs-curl</artifactId>
					<version>0.8.1</version>
				</dependency>
				
				
        		
<!--         		<dependency>
          			<groupId>org.webjars</groupId>
          			<artifactId>angularjs</artifactId>
          			<version>1.5.0</version>
        		</dependency>
        		<dependency>
          			<groupId>org.webjars</groupId>
          			<artifactId>bootstrap</artifactId>
          			<version>3.2.0</version>
        		</dependency> -->
      		</dependencies>
    	</plugin>
		
 	</plugins>
    </build>	
	</profile>
<!-- 	<profile>
  		<id>prod</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>  		 
		<properties>
           		<db.jdbcUrl>jdbc:mysql://localhost:3306/sf5angulardev</db.jdbcUrl>
           		<db.driver>org.postgresql.Driver</db.driver>
           		<db.user>sf5jsf</db.user>
           		<db.password>1</db.password>
           		<db.dialect>ProgressDialect</db.dialect>
  				<rp.build.warname>SF5Spring</rp.build.warname>
  				<property.placeholder>prod</property.placeholder>
  				<db.hbm2ddl>update</db.hbm2ddl>
		</properties>
	</profile> -->
	<profile>
  		<id>dev</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>
		<properties>
            <db.jdbcUrl>jdbc:mysql://localhost:3306/sf5angulardev</db.jdbcUrl>
           	<db.driver>com.mysql.jdbc.Driver</db.driver>
           	<db.user>root</db.user>
           	<db.password>123456</db.password>
           	<db.dialect>MySQL5Dialect</db.dialect>
  			<rp.build.warname>SF5Spring-test</rp.build.warname>
  			<property.placeholder>dev</property.placeholder>
  			<db.hbm2ddl>update</db.hbm2ddl>
  		</properties>
	</profile>
	<profile>
	 	<id>openshift</id>
         	<activation>
            	<activeByDefault>true</activeByDefault>
        	</activation>
        	<properties>
        		<db.jdbcUrl>jdbc:mysql://localhost:3306/sf5angulardev</db.jdbcUrl>
           		<db.driver>com.mysql.jdbc.Driver</db.driver>
           		<db.user>root</db.user>
           		<db.password>123456</db.password>
        		<rp.build.warname></rp.build.warname> <!-- For jboss-web.xml -->
        		<db.dialect>MySQL5Dialect</db.dialect>
        		<property.placeholder>openshift</property.placeholder>
        		<db.hbm2ddl>update</db.hbm2ddl>
        	</properties>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>2.6</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>ROOT</warName>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
</profiles>

 
 
<dependencies>
	<!-- Spring -->
	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context</artifactId>
  		<version>${spring.version}</version>
  	</dependency>
  	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
 	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-beans</artifactId>
    	<version>${spring.version}</version>
	</dependency>
    <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.security.version}</version>
	</dependency>
 	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
 	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-taglibs</artifactId>
    	<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-tx</artifactId>
    	<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	<!-- Work with JSP - for login -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp.jstl</groupId>
		<artifactId>javax.servlet.jsp.jstl-api</artifactId>
		<version>1.2.1</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>jsp-api</artifactId>
		<version>2.2.1-b03</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.apache.taglibs</groupId>
		<artifactId>taglibs-standard-impl</artifactId>
		<version>1.2.5</version>
		<scope>provided</scope>
	</dependency>
	
	<!-- Hibernate -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>${hibernate.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>5.2.3.Final</version>
	</dependency>
	
		<!-- Jackson dependencies -->
	<dependency>
    	<groupId>com.fasterxml.jackson.core</groupId>
    	<artifactId>jackson-databind</artifactId>
    	<version>${jackson.version}</version>
    	<scope>provided</scope>
	</dependency>
	
	<!--  APIs -->
	<dependency>
    	<groupId>javax</groupId>
    	<artifactId>javaee-web-api</artifactId>
    	<version>7.0</version>
    	<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.1.0</version>
		<scope>provided</scope>
	</dependency>
	
	<!-- Databases -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.38</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<version>1.4.191</version>
		<scope>provided</scope>
	</dependency>
	
	<!-- Jackson dependencies -->
	<dependency>
    	<groupId>com.fasterxml.jackson.core</groupId>
    	<artifactId>jackson-databind</artifactId>
    	<version>${jackson.version}</version>
    	<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.jaxrs</groupId>
		<artifactId>jackson-jaxrs-json-provider</artifactId>
		<version>${jackson.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.jaxrs</groupId>
		<artifactId>jackson-jaxrs-xml-provider</artifactId>
		<version>${jackson.version}</version>
		<scope>test</scope>
	</dependency>
	<!-- This is only needed for Spring -->
	<dependency>
		<groupId>com.fasterxml.jackson.dataformat</groupId>
		<artifactId>jackson-dataformat-xml</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<!-- From http://stackoverflow.com/questions/22950542/pretty-printing-xml-with-jackson-library -->
	<dependency>
		<groupId>org.codehaus.woodstox</groupId>
		<artifactId>woodstox-core-asl</artifactId>
		<version>4.4.1</version>
	</dependency>
	
	<!-- Tests -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-core</artifactId>
		<version>3.2.0</version>
		<scope>test</scope>
	</dependency>
	
	<!-- java.lang.ClassNotFoundException: org.apache.commons.fileupload.FileItemFactory  -->
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.3.1</version>
	</dependency>
	
		
</dependencies> 
  
</project>